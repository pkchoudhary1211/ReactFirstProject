{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Js\\\\my-app\\\\src\\\\views\\\\testMDB.js\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { MDBDataTable } from \"mdbreact\";\nimport DataTable from \"react-data-table-component\";\nimport { Doughnut, Bar } from \"react-chartjs-2\"; // import { Doughnut } from 'react-chartjs-2';\n\nimport PieChart from \"react-minimal-pie-chart\";\nimport ReactSvgPieChart from \"react-svg-piechart\";\n\nconst axios = require(\"axios\");\n\nconst data = {\n  labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n  datasets: [{\n    label: '# of Votes',\n    data: [12, 19, 3, 5, 2, 3],\n    backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n    borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n    borderWidth: 1\n  }]\n};\nconst columnsMDB = [{\n  label: \"userId\",\n  field: \"userId\",\n  sort: \"asc\",\n  width: 150\n}, {\n  label: \"#\",\n  field: \"id\",\n  sort: \"asc\",\n  width: 100\n}, {\n  label: \"Title\",\n  field: \"title\",\n  sort: \"asc\",\n  width: 300\n}, {\n  label: \"Body\",\n  field: \"body\",\n  sort: \"asc\",\n  width: 600\n}];\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.apiData = () => {\n      console.log(\"inside api data\");\n      axios({\n        method: \"get\",\n        url: \"https://jsonplaceholder.typicode.com/posts\",\n        responseType: \"stream\"\n      }).then(response => {\n        this.setState({\n          apiValue: response.data,\n          apiMDBvalue: {\n            rows: response.data\n          }\n        }, () => {\n          console.log(this.state.apiValue);\n        });\n      });\n    };\n\n    this.state = {\n      apiMDBvalue: null\n    };\n  }\n\n  componentDidMount() {\n    this.apiData();\n  }\n\n  render() {\n    console.log(\"Inside test\");\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Bar, {\n      data: data,\n      height: zz,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Test;","map":{"version":3,"sources":["E:/React Js/my-app/src/views/testMDB.js"],"names":["React","MDBDataTable","DataTable","Doughnut","Bar","PieChart","ReactSvgPieChart","axios","require","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","columnsMDB","field","sort","width","Test","Component","constructor","props","apiData","console","log","method","url","responseType","then","response","setState","apiValue","apiMDBvalue","rows","state","componentDidMount","render","zz"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Doughnut, Bar } from \"react-chartjs-2\";\r\n// import { Doughnut } from 'react-chartjs-2';\r\nimport PieChart from \"react-minimal-pie-chart\";\r\nimport ReactSvgPieChart from \"react-svg-piechart\";\r\nconst axios = require(\"axios\");\r\nconst data = {\r\n    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n    datasets: [{\r\n        label: '# of Votes',\r\n        data: [12, 19, 3, 5, 2, 3],\r\n        backgroundColor: [\r\n            'rgba(255, 99, 132, 0.2)',\r\n            'rgba(54, 162, 235, 0.2)',\r\n            'rgba(255, 206, 86, 0.2)',\r\n            'rgba(75, 192, 192, 0.2)',\r\n            'rgba(153, 102, 255, 0.2)',\r\n            'rgba(255, 159, 64, 0.2)'\r\n        ],\r\n        borderColor: [\r\n            'rgba(255, 99, 132, 1)',\r\n            'rgba(54, 162, 235, 1)',\r\n            'rgba(255, 206, 86, 1)',\r\n            'rgba(75, 192, 192, 1)',\r\n            'rgba(153, 102, 255, 1)',\r\n            'rgba(255, 159, 64, 1)'\r\n        ],\r\n        borderWidth: 1\r\n    }]\r\n};\r\nconst columnsMDB = [\r\n  {\r\n    label: \"userId\",\r\n    field: \"userId\",\r\n    sort: \"asc\",\r\n    width: 150\r\n  },\r\n  {\r\n    label: \"#\",\r\n    field: \"id\",\r\n    sort: \"asc\",\r\n    width: 100\r\n  },\r\n  {\r\n    label: \"Title\",\r\n    field: \"title\",\r\n    sort: \"asc\",\r\n    width: 300\r\n  },\r\n  {\r\n    label: \"Body\",\r\n    field: \"body\",\r\n    sort: \"asc\",\r\n    width: 600\r\n  }\r\n];\r\n\r\nclass Test extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      apiMDBvalue: null\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.apiData();\r\n  }\r\n  apiData = () => {\r\n    console.log(\"inside api data\");\r\n    axios({\r\n      method: \"get\",\r\n      url: \"https://jsonplaceholder.typicode.com/posts\",\r\n      responseType: \"stream\"\r\n    }).then(response => {\r\n      this.setState(\r\n        {\r\n          apiValue: response.data,\r\n          apiMDBvalue: { rows: response.data }\r\n        },\r\n        () => {\r\n          console.log(this.state.apiValue);\r\n        }\r\n      );\r\n    });\r\n  };\r\n  render() {\r\n    console.log(\"Inside test\");\r\n    return (\r\n      <React.Fragment>\r\n        {/* <MDBDataTable\r\n          striped\r\n          bordered\r\n          hover\r\n          paging={true}\r\n          columns={columnsMDB}\r\n          data={this.state.apiMDBvalue ? this.state.apiMDBvalue : []}\r\n        /> */}\r\n        <Bar\r\n          data={data}\r\n            height={zz}          \r\n         \r\n        />\r\n        {/* <Doughnut\r\n          data={data}\r\n          // options={ {maintainAspectRatio: false} }\r\n        /> */}\r\n        {/* <PieChart\r\n                animate={true}\r\n                // rounded={true}\r\n                width={60}\r\n                x={10}\r\n                startAngle={10}\r\n                data={data}\r\n            />; */}\r\n        {/* <ReactSvgPieChart\r\n                data={data}\r\n                strokeWidth={.04}\r\n                viewBoxSize={1}\r\n                expandSize={1}\r\n                // If you need expand on hover (or touch) effect\r\n                expandOnHover\r\n                // If you need custom behavior when sector is hovered (or touched)\r\n                // onSectorHover={(d, i, e) => {\r\n                // //   if (d) {\r\n                // //     console.log(\"Mouse enter - Index:\", i, \"Data:\", d, \"Event:\", e)\r\n                // //   } else {\r\n                // //     console.log(\"Mouse leave - Index:\", i, \"Event:\", e)\r\n                // //   }\r\n                // }}\r\n            /> */}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n"]},"metadata":{},"sourceType":"module"}