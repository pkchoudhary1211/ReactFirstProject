{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Js\\\\my-app\\\\src\\\\views\\\\admin.js\";\nimport React from 'react';\nimport { Component } from 'ag-grid-community';\nimport Header from './header.js';\nimport Footer from './footer.js';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from 'react-loader-spinner'; // import React from 'react';\n\nimport { Slide } from 'react-slideshow-image';\nconst slideImages = ['https://images.alphacoders.com/665/thumb-1920-665091.jpg', 'images/slide_3.jpg', 'images/slide_4.jpg'];\nconst properties = {\n  duration: 5000,\n  transitionDuration: 500,\n  infinite: true,\n  indicators: true,\n  arrows: true\n};\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        isLoading: false\n      });\n    }, 3000);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Main File \"), React.createElement(Slide, Object.assign({}, properties, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"each-slide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        'backgroundImage': \"url(\".concat(slideImages[0], \")\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Slide 1\"))), React.createElement(\"div\", {\n      className: \"each-slide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        'backgroundImage': \"url(\".concat(slideImages[1], \")\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Slide 2\"))), React.createElement(\"div\", {\n      className: \"each-slide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        'backgroundImage': \"url(\".concat(slideImages[2], \")\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Slide 3\")))), React.createElement(\"div\", {\n      className: \"center_loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.isLoading ? React.createElement(Loader, {\n      type: \"Puff\",\n      color: \"#00BFFF\",\n      height: 100,\n      width: 100,\n      timeout: 3000 //3 secs\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }) : ''), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Admin;","map":{"version":3,"sources":["E:/React Js/my-app/src/views/admin.js"],"names":["React","Component","Header","Footer","Loader","Slide","slideImages","properties","duration","transitionDuration","infinite","indicators","arrows","Admin","constructor","props","state","isLoading","componentDidMount","setTimeout","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAO,+DAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;;AACA,SAASC,KAAT,QAAsB,uBAAtB;AACA,MAAMC,WAAW,GAAG,CAChB,0DADgB,EAEhB,oBAFgB,EAGhB,oBAHgB,CAApB;AAKE,MAAMC,UAAU,GAAG;AACjBC,EAAAA,QAAQ,EAAE,IADO;AAEjBC,EAAAA,kBAAkB,EAAE,GAFH;AAGjBC,EAAAA,QAAQ,EAAE,IAHO;AAIjBC,EAAAA,UAAU,EAAE,IAJK;AAKjBC,EAAAA,MAAM,EAAE;AALS,CAAnB;;AAOF,MAAMC,KAAN,SAAoBb,KAAK,CAACC,SAA1B,CAAmC;AAC/Ba,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,UAAU,CAAC,MAAI;AACX,WAAKC,QAAL,CAAc;AACVH,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KAJS,EAIR,IAJQ,CAAV;AAKH;;AACDI,EAAAA,MAAM,GAAE;AACJ,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFL,EAGK,oBAAC,KAAD,oBAAWd,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACG;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,KAAK,EAAE;AAAC,yCAA0BD,WAAW,CAAC,CAAD,CAArC;AAAD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CADA,CADH,EAMG;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,KAAK,EAAE;AAAC,yCAA0BA,WAAW,CAAC,CAAD,CAArC;AAAD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CADA,CANH,EAWG;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,KAAK,EAAE;AAAC,yCAA0BA,WAAW,CAAC,CAAD,CAArC;AAAD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CADA,CAXH,CAHL,EAoBQ;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKU,KAAL,CAAWC,SAAX,GAAyB,oBAAC,MAAD;AACF,MAAA,IAAI,EAAC,MADH;AAEF,MAAA,KAAK,EAAC,SAFJ;AAGF,MAAA,MAAM,EAAE,GAHN;AAIF,MAAA,KAAK,EAAE,GAJL;AAKF,MAAA,OAAO,EAAE,IALP,CAKa;AALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB,GAMwB,EAPzB,CApBR,EA8BI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BJ,CADJ;AAkCH;;AAhD8B;;AAkDnC,eAAeJ,KAAf","sourcesContent":["import React from 'react'\r\nimport { Component } from 'ag-grid-community';\r\nimport Header from './header.js'\r\nimport Footer from './footer.js'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\nimport Loader from 'react-loader-spinner'\r\n// import React from 'react';\r\nimport { Slide } from 'react-slideshow-image';\r\nconst slideImages = [\r\n    'https://images.alphacoders.com/665/thumb-1920-665091.jpg',\r\n    'images/slide_3.jpg',\r\n    'images/slide_4.jpg'\r\n  ];\r\n  const properties = {\r\n    duration: 5000,\r\n    transitionDuration: 500,\r\n    infinite: true,\r\n    indicators: true,\r\n    arrows: true\r\n  }\r\nclass Admin extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { isLoading: true }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        setTimeout(()=>{\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n        },3000)\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Header/>\r\n                 <h1>Main File </h1>\r\n                 <Slide {...properties}>\r\n                    <div className=\"each-slide\">\r\n                    <div style={{'backgroundImage': `url(${slideImages[0]})`}}>\r\n                        <span>Slide 1</span>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"each-slide\">\r\n                    <div style={{'backgroundImage': `url(${slideImages[1]})`}}>\r\n                        <span>Slide 2</span>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"each-slide\">\r\n                    <div style={{'backgroundImage': `url(${slideImages[2]})`}}>\r\n                        <span>Slide 3</span>\r\n                    </div>\r\n                    </div>\r\n                </Slide>\r\n                    <div className=\"center_loader\">\r\n                    {this.state.isLoading ?   <Loader\r\n                                            type=\"Puff\"\r\n                                            color=\"#00BFFF\"\r\n                                            height={100}\r\n                                            width={100}\r\n                                            timeout={3000} //3 secs\r\n                                        /> : ''}\r\n                    </div>\r\n                 \r\n                <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default Admin;"]},"metadata":{},"sourceType":"module"}