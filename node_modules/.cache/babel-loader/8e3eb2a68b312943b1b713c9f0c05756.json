{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Js\\\\my-app\\\\src\\\\views\\\\home.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst axios = require('axios');\n\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-enterprise\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.apiData();\n    };\n\n    this.check = () => {\n      const flag = this.state.flag;\n      console.log(\"flag\" + flag);\n      console.log(this.email.current.value);\n\n      if (flag === 1) {\n        this.setState({\n          val: \"Hello You clicked\",\n          flag: 0\n        });\n      } else {\n        this.setState({\n          val: \"Click\",\n          flag: 1\n        });\n      }\n    };\n\n    this.addUser = () => {\n      this.setState(prevState => {\n        if (prevState.name === '') {\n          return {\n            err: 'Please Enter Name'\n          };\n        } else {\n          return {\n            users: [...prevState.users, prevState.name],\n            name: \"\",\n            err: ''\n          };\n        }\n      });\n    };\n\n    this.formSubmit = event => {\n      event.preventDefault();\n      console.log(\"Fom data validation\", event);\n    };\n\n    this.apiData = () => {\n      // var self = this;\n      axios({\n        method: 'get',\n        url: 'https://jsonplaceholder.typicode.com/posts',\n        responseType: 'stream'\n      }).then(response => {\n        this.setState({\n          apiValue: response.data\n        }, () => {\n          console.log(this.state.apiValue);\n        }); // getData(response.data);\n        //   response.data.pipe(fs.createWriteStream('ada_lovelace.jpg'))\n      });\n    };\n\n    this.email = React.createRef();\n    this.password = React.createRef();\n    this.state = {\n      val: \"Prakash\",\n      flag: 1,\n      users: [],\n      name: '',\n      err: '',\n      apiValue: null,\n      columnDefs: [{\n        headerName: \"Athlete\",\n        field: \"athlete\",\n        width: 150,\n        checkboxSelection: function (params) {\n          return params.columnApi.getRowGroupColumns().length === 0;\n        },\n        headerCheckboxSelection: function (params) {\n          return params.columnApi.getRowGroupColumns().length === 0;\n        }\n      }, {\n        headerName: \"Age\",\n        field: \"age\",\n        width: 90\n      }, {\n        headerName: \"Country\",\n        field: \"country\",\n        width: 120\n      }, {\n        headerName: \"Year\",\n        field: \"year\",\n        width: 90\n      }, {\n        headerName: \"Date\",\n        field: \"date\",\n        width: 110\n      }, {\n        headerName: \"Sport\",\n        field: \"sport\",\n        width: 110\n      }, {\n        headerName: \"Gold\",\n        field: \"gold\",\n        width: 100\n      }, {\n        headerName: \"Silver\",\n        field: \"silver\",\n        width: 100\n      }, {\n        headerName: \"Bronze\",\n        field: \"bronze\",\n        width: 100\n      }, {\n        headerName: \"Total\",\n        field: \"total\",\n        width: 100\n      }],\n      columnDefs: [{\n        headerName: \"Athlete\",\n        field: \"athlete\",\n        width: 150,\n        checkboxSelection: function (params) {\n          return params.columnApi.getRowGroupColumns().length === 0;\n        },\n        headerCheckboxSelection: function (params) {\n          return params.columnApi.getRowGroupColumns().length === 0;\n        }\n      }, {\n        headerName: \"Age\",\n        field: \"age\",\n        width: 90\n      }, {\n        headerName: \"Country\",\n        field: \"country\",\n        width: 120\n      }, {\n        headerName: \"Year\",\n        field: \"year\",\n        width: 90\n      }, {\n        headerName: \"Date\",\n        field: \"date\",\n        width: 110\n      }, {\n        headerName: \"Sport\",\n        field: \"sport\",\n        width: 110\n      }, {\n        headerName: \"Gold\",\n        field: \"gold\",\n        width: 100\n      }, {\n        headerName: \"Silver\",\n        field: \"silver\",\n        width: 100\n      }, {\n        headerName: \"Bronze\",\n        field: \"bronze\",\n        width: 100\n      }, {\n        headerName: \"Total\",\n        field: \"total\",\n        width: 100\n      }],\n      autoGroupColumnDef: {\n        headerName: \"Group\",\n        width: 200,\n        field: \"athlete\",\n        valueGetter: function (params) {\n          if (params.node.group) {\n            return params.node.key;\n          } else {\n            return params.data[params.colDef.field];\n          }\n        },\n        headerCheckboxSelection: true,\n        cellRenderer: \"agGroupCellRenderer\",\n        cellRendererParams: {\n          checkbox: true\n        }\n      },\n      defaultColDef: {\n        editable: true,\n        enableRowGroup: true,\n        enablePivot: true,\n        enableValue: true,\n        sortable: true,\n        resizable: true,\n        filter: true\n      },\n      rowSelection: \"multiple\",\n      rowGroupPanelShow: \"always\",\n      pivotPanelShow: \"always\",\n      rowData: []\n    };\n  }\n\n  handleChange(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  render() {\n    // var val=\"prakash\";\n    // const flag=this.state;\n    // console.log(this.state.users)\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"Hello World\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"button\",\n      class: \"btn btn-info\",\n      value: \"Click\",\n      onClick: this.check,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"hello Wolrd \", this.state.val)), React.createElement(\"div\", {\n      class: \"conatiner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      name: \"userName\",\n      value: this.state.name,\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"button\",\n      onClick: this.apiData,\n      class: \"btn btn-primary\",\n      value: \"add User\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \" form\"), React.createElement(\"form\", {\n      onSubmit: this.formSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      class: \"form-control\",\n      ref: this.email,\n      id: \"email\",\n      placeholder: \"Enter email\",\n      name: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      class: \"form-control\",\n      ref: this.password,\n      id: \"pwd\",\n      placeholder: \"Enter password\",\n      name: \"pwd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"remember\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }), \" Remember me\")), React.createElement(\"button\", {\n      type: \"submit\",\n      class: \"btn btn-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"Basic Table\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \"The .table class adds basic styling (light padding and only horizontal dividers) to a table:\"), React.createElement(\"table\", {\n      class: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"id\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"Body\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, this.state.apiValue ? this.state.apiValue.map(value => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, value.id), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, value.title), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, value.body))) : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"Not Found\")))), this.state.apiValue ? this.state.apiValue.map(value => React.createElement(React.Fragment, null, \" \", value.userId === 2 ? React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, value.userId) : null, \" \")) : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \"Not Avaialbe\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \" \", this.state.err), this.state.users.map((user, index) => React.createElement(\"h1\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, user)));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["E:/React Js/my-app/src/views/home.js"],"names":["React","axios","require","AgGridReact","Home","Component","constructor","props","componentDidMount","apiData","check","flag","state","console","log","email","current","value","setState","val","addUser","prevState","name","err","users","formSubmit","event","preventDefault","method","url","responseType","then","response","apiValue","data","createRef","password","columnDefs","headerName","field","width","checkboxSelection","params","columnApi","getRowGroupColumns","length","headerCheckboxSelection","autoGroupColumnDef","valueGetter","node","group","key","colDef","cellRenderer","cellRendererParams","checkbox","defaultColDef","editable","enableRowGroup","enablePivot","enableValue","sortable","resizable","filter","rowSelection","rowGroupPanelShow","pivotPanelShow","rowData","handleChange","target","render","bind","map","id","title","body","userId","user","index"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst axios = require('axios');\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-enterprise\";\r\nclass Home extends React.Component{\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.email = React.createRef();\r\n        this.password  = React.createRef();\r\n        this.state = {\r\n           val: \"Prakash\" ,\r\n           flag:1,\r\n           users:[],\r\n           name:'',\r\n           err:'',\r\n           apiValue:null,\r\n           columnDefs: [\r\n            {\r\n              headerName: \"Athlete\",\r\n              field: \"athlete\",\r\n              width: 150,\r\n              checkboxSelection: function(params) {\r\n                return params.columnApi.getRowGroupColumns().length === 0;\r\n              },\r\n              headerCheckboxSelection: function(params) {\r\n                return params.columnApi.getRowGroupColumns().length === 0;\r\n              }\r\n            },\r\n            {\r\n              headerName: \"Age\",\r\n              field: \"age\",\r\n              width: 90\r\n            },\r\n            {\r\n              headerName: \"Country\",\r\n              field: \"country\",\r\n              width: 120\r\n            },\r\n            {\r\n              headerName: \"Year\",\r\n              field: \"year\",\r\n              width: 90\r\n            },\r\n            {\r\n              headerName: \"Date\",\r\n              field: \"date\",\r\n              width: 110\r\n            },\r\n            {\r\n              headerName: \"Sport\",\r\n              field: \"sport\",\r\n              width: 110\r\n            },\r\n            {\r\n              headerName: \"Gold\",\r\n              field: \"gold\",\r\n              width: 100\r\n            },\r\n            {\r\n              headerName: \"Silver\",\r\n              field: \"silver\",\r\n              width: 100\r\n            },\r\n            {\r\n              headerName: \"Bronze\",\r\n              field: \"bronze\",\r\n              width: 100\r\n            },\r\n            {\r\n              headerName: \"Total\",\r\n              field: \"total\",\r\n              width: 100\r\n            }\r\n          ],\r\n          columnDefs: [\r\n            {\r\n              headerName: \"Athlete\",\r\n              field: \"athlete\",\r\n              width: 150,\r\n              checkboxSelection: function(params) {\r\n                return params.columnApi.getRowGroupColumns().length === 0;\r\n              },\r\n              headerCheckboxSelection: function(params) {\r\n                return params.columnApi.getRowGroupColumns().length === 0;\r\n              }\r\n            },\r\n            {\r\n              headerName: \"Age\",\r\n              field: \"age\",\r\n              width: 90\r\n            },\r\n            {\r\n              headerName: \"Country\",\r\n              field: \"country\",\r\n              width: 120\r\n            },\r\n            {\r\n              headerName: \"Year\",\r\n              field: \"year\",\r\n              width: 90\r\n            },\r\n            {\r\n              headerName: \"Date\",\r\n              field: \"date\",\r\n              width: 110\r\n            },\r\n            {\r\n              headerName: \"Sport\",\r\n              field: \"sport\",\r\n              width: 110\r\n            },\r\n            {\r\n              headerName: \"Gold\",\r\n              field: \"gold\",\r\n              width: 100\r\n            },\r\n            {\r\n              headerName: \"Silver\",\r\n              field: \"silver\",\r\n              width: 100\r\n            },\r\n            {\r\n              headerName: \"Bronze\",\r\n              field: \"bronze\",\r\n              width: 100\r\n            },\r\n            {\r\n              headerName: \"Total\",\r\n              field: \"total\",\r\n              width: 100\r\n            }\r\n          ],\r\n          autoGroupColumnDef: {\r\n            headerName: \"Group\",\r\n            width: 200,\r\n            field: \"athlete\",\r\n            valueGetter: function(params) {\r\n              if (params.node.group) {\r\n                return params.node.key;\r\n              } else {\r\n                return params.data[params.colDef.field];\r\n              }\r\n            },\r\n            headerCheckboxSelection: true,\r\n            cellRenderer: \"agGroupCellRenderer\",\r\n            cellRendererParams: { checkbox: true }\r\n          },\r\n          defaultColDef: {\r\n            editable: true,\r\n            enableRowGroup: true,\r\n            enablePivot: true,\r\n            enableValue: true,\r\n            sortable: true,\r\n            resizable: true,\r\n            filter: true\r\n          },\r\n          rowSelection: \"multiple\",\r\n          rowGroupPanelShow: \"always\",\r\n          pivotPanelShow: \"always\",\r\n          rowData: []\r\n        };\r\n     }\r\n     componentDidMount=() =>{\r\n        this.apiData();\r\n     }\r\n    check = ()=>{\r\n        const flag=this.state.flag;\r\n        console.log(\"flag\" +flag)\r\n        console.log(this.email.current.value)\r\n        if(flag===1){\r\n            this.setState({\r\n                val:\"Hello You clicked\",\r\n                flag:0\r\n            })\r\n        }else{\r\n            this.setState({\r\n                val:\"Click\",\r\n                flag:1\r\n            })\r\n        }\r\n        }\r\n        addUser = () => {\r\n            this.setState((prevState)=>{\r\n                if(prevState.name===''){\r\n                   return{\r\n                    err:'Please Enter Name'\r\n                   } \r\n                }else{\r\n                    return {\r\n                        users : [...prevState.users, prevState.name],\r\n                        name: \"\",\r\n                        err:''\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        handleChange(event) {\r\n            this.setState({name: event.target.value})\r\n        }\r\n        formSubmit = (event) =>{\r\n            event.preventDefault();\r\n            console.log(\"Fom data validation\",event)\r\n        }\r\n        apiData = () =>{\r\n            // var self = this;\r\n            axios({\r\n                method: 'get',\r\n                url: 'https://jsonplaceholder.typicode.com/posts',\r\n                responseType: 'stream'\r\n              })\r\n                .then(  (response)=>{\r\n                    this.setState({\r\n                        apiValue: response.data,\r\n                    },()=>{\r\n                        console.log(this.state.apiValue)\r\n                    })\r\n                // getData(response.data);\r\n                //   response.data.pipe(fs.createWriteStream('ada_lovelace.jpg'))\r\n            \r\n                });\r\n        }\r\n    render(){\r\n        // var val=\"prakash\";\r\n        // const flag=this.state;\r\n        // console.log(this.state.users)\r\n        return(\r\n            <React.Fragment>\r\n                <h1>Hello World</h1>\r\n                <div>\r\n                    <input type=\"button\"  class=\"btn btn-info\" value=\"Click\" onClick={this.check}/>\r\n                    <h1>hello Wolrd {this.state.val}</h1>\r\n                </div>\r\n                <div class=\"conatiner\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-3\">\r\n                        </div>\r\n                        <div class=\"col-md-3\">\r\n                            <input type=\"text\" class=\"form-control\" name=\"userName\" value={this.state.name} onChange={this.handleChange.bind(this)}/> \r\n                        </div>\r\n                        <div class=\"col-md-3\">\r\n                            <input type=\"button\" onClick={(this.apiData)} class=\"btn btn-primary\" value=\"add User\"/>\r\n                        </div>\r\n                        <div class=\"col-md-3\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"container\">\r\n                    <h2> form</h2>\r\n                    <form onSubmit={this.formSubmit}>\r\n                        <div class=\"form-group\">\r\n                            <input type=\"email\" class=\"form-control\" ref={this.email} id=\"email\" placeholder=\"Enter email\" name=\"email\"/>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <input type=\"password\" class=\"form-control\" ref={this.password} id=\"pwd\" placeholder=\"Enter password\" name=\"pwd\"/>\r\n                        </div>\r\n                        <div class=\"checkbox\">\r\n                            <label><input type=\"checkbox\" name=\"remember\"/> Remember me</label>\r\n                        </div>\r\n                        <button type=\"submit\" class=\"btn btn-secondary\">Submit</button>\r\n                    </form>\r\n                </div>\r\n               <div class=\"container\">\r\n                <h2>Basic Table</h2>\r\n                <p>The .table class adds basic styling (light padding and only horizontal dividers) to a table:</p>            \r\n                <table class=\"table\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>id</th>\r\n                        <th>Title</th>\r\n                        <th>Body</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.apiValue ? this.state.apiValue.map(value=>\r\n                        <tr>\r\n                            <td>{value.id}</td>\r\n                            <td>{value.title}</td>\r\n                            <td>{value.body}</td>\r\n                        </tr>\r\n                    ):<h1>Not Found</h1>}\r\n                    </tbody>\r\n                </table>\r\n                </div>\r\n                {this.state.apiValue?this.state.apiValue.map(value =>(\r\n                  <> { value.userId === 2 ?<h6>{value.userId}</h6>: null} </>\r\n                )): <h1>Not Avaialbe</h1>}\r\n              <h3> {this.state.err}</h3> \r\n                { this.state.users.map((user,index)=>(\r\n                   <h1 key={index}>{user}</h1>\r\n               ))}\r\n            </React.Fragment>\r\n        );       \r\n    }\r\n}\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}