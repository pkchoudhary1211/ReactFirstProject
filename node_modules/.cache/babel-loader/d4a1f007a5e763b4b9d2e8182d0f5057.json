{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Js\\\\my-app\\\\src\\\\views\\\\testContact.js\";\nimport React from 'react';\nimport { Component } from 'ag-grid-community';\nimport SimpleReactValidator from 'simple-react-validator';\nimport { MDBDataTable } from 'mdbreact';\nimport DataTable from 'react-data-table-component';\nimport { Redirect } from 'react-router-dom';\n\nconst axios = require('axios');\n\nconst instance = axios.create({\n  baseURL: 'http://127.0.0.1:8000'\n});\nconst columnsMDB = [{\n  label: 'Id',\n  field: '_id',\n  sort: 'asc',\n  width: 200\n}, {\n  label: 'Name',\n  field: 'name',\n  sort: 'asc',\n  width: 300\n}, {\n  label: 'E-mail',\n  field: 'email',\n  sort: 'asc',\n  width: 300\n}, {\n  label: 'Subject',\n  field: 'subjecr',\n  sort: 'asc',\n  width: 300\n}, {\n  label: 'Message',\n  field: 'message',\n  sort: 'asc',\n  width: 100\n}];\n\nclass TestContact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: null,\n      name: '',\n      subject: '',\n      message: '',\n      //     val: \"Prakash\" ,\n      //    flag:1,\n      users: [],\n      name: '',\n      err: '',\n      keyword: '',\n      apiValue: null,\n      apiMDBvalue: null\n    };\n    this.validator = new SimpleReactValidator({\n      autoForceUpdate: this,\n      messages: {\n        email: 'That is not an E mail!!.',\n        // OR\n        default: 'Validation has failed!' // will override all messages\n\n      },\n      element: message => React.createElement(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, message)\n    });\n    this.contactForm = this.contactForm.bind(this);\n    this.main = this.main.bind(this);\n    this.getContact = this.getContact.bind(this);\n  }\n\n  main() {\n    if (this.validator.allValid()) {\n      alert('You submitted the form and stuff!');\n      console.log(\"test here\");\n      var user = {\n        'name': this.state.name,\n        'email': this.state.email,\n        'subject': this.state.subject,\n        'message': this.state.message\n      };\n      instance.post(\"/contact/insert\", {\n        'name': this.state.name,\n        'email': this.state.email,\n        'subject': this.state.subject,\n        'message': this.state.message\n      }).then(res => {\n        console.log(res);\n        console.log(res.data);\n        this.getContact();\n      });\n      console.log('All works fine, congratz!');\n    } else {\n      this.validator.showMessages();\n      this.forceUpdate();\n    }\n  }\n\n  contactForm(event) {\n    event.preventDefault();\n    console.log(\"form submited\", this.state.email, \"name :\", this.state.name, \"subject :\", this.state.subject, 'message :', this.state.message); // let testAccount = await nodemailer.createTestAccount();\n\n    this.main();\n    event.target.reset();\n  }\n\n  componentDidMount() {\n    // /contact/remove/\n    this.getContact();\n  }\n\n  removeContact(id) {\n    axios.defaults.port = 8000;\n    let isRemove = window.confirm('Are You Sure To Delete This Record ?');\n\n    if (isRemove) {\n      instance.get('/contact/remove/' + id).then(res => {\n        this.getContact();\n      }).catch(error => {\n        console.log(error);\n      });\n      console.log('user Id:', id);\n    }\n  }\n\n  searchContact(event) {}\n\n  editContact(id) {\n    this.props.history.push('/edit/' + id); // this.props.history.push('/edit/'+id);\n    // return <Redirect to='/edit/23' />\n\n    console.log(\"htisi\", id);\n  }\n\n  getContact() {\n    axios({\n      url: 'http://localhost:8000/graphql',\n      method: 'post',\n      data: {\n        query: \"\\n                query {\\n                    contacts {\\n                    name\\n                    email\\n                    subject\\n                    message\\n                    }\\n                }\"\n      }\n    }).then(result => {\n      console.log(result.data);\n      const contact = result.data.contacts; //       console.log(contact);\n\n      this.setState({\n        apiMDBvalue: contact\n      });\n    }); // console.log(\"Inside get function\");\n    // const requestBody = {\n    //     query: `\n    //         query {\n    //           contacts {\n    //             name\n    //             email\n    //             subject\n    //             message\n    //           }\n    //         }\n    //       `\n    //   };\n    //   instance.post(\"/graphql\",\n    //    {requestBody})\n    //     .then(res => {\n    //         console.log(\"result\",res);\n    //       if (res.status !== 200 && res.status !== 201) {\n    //         throw new Error(\"Failed!\");\n    //       }\n    //       return res.json();\n    //     })\n    //     .then(resData => {\n    //       const contact = resData.data.contacts;\n    //       console.log(contact);\n    //       this.setState({ apiMDBvalue: contact });\n    //     })\n    //     .catch(err => {\n    //       console.log(err);\n    //     });\n    // axios\n    // console.log('called here  in getcCOntact')\n    // .defaults.port = 8000;\n    // instance.get('/contact/list')\n    // .then(res => {\n    //     console.log('data result:',res);\n    //     console.log('second value:',res.data);\n    //     this.setState({\n    //         // apiMDBvalue:{'coloums':columnsMDB,'rows': res.data}\n    //         apiMDBvalue:res.data,\n    //     });\n    // })\n    // .catch(error =>{\n    //     console.log(error)\n    // })\n    // axios({\n    //     method: 'get',\n    //     url: 'http://localhost:8000/contact/list',\n    //     responseType: 'stream'\n    //   })\n    //     .then(  (response)=>{\n    //         console.log('    :',response)\n    //         this.setState({\n    //             apiValue: response.data,\n    //             apiMDBvalue:{'coloums':columnsMDB,'rows': response.data}\n    //         },()=>{\n    //             console.log('api data vcaoue:',this.state.apiValue)\n    //         })\n    //     // getData(response.data);\n    //     //   response.data.pipe(fs.createWriteStream('ada_lovelace.jpg'))\n    //     });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"contact-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"h1-responsive font-weight-bold text-center my-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Contact us\"), React.createElement(\"p\", {\n      className: \"text-center w-responsive mx-auto mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Do you have any questions? Please do not hesitate to contact us directly. Our team will come back to you within a matter of hours to help you.\"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-9 mb-md-0 mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"contact-form\",\n      onSubmit: this.contactForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"md-form mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: e => {\n        this.setState({\n          name: e.target.value\n        });\n      },\n      onBlur: () => this.validator.showMessageFor('name'),\n      placeholder: \"Please Enter Your Name\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), this.validator.message('name', this.state.name, 'required'))), React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"md-form mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"email\",\n      value: this.state.email,\n      name: \"email\",\n      onChange: e => {\n        this.setState({\n          email: e.target.value\n        });\n      },\n      onBlur: () => this.validator.showMessageFor('email'),\n      placeholder: \"Please Enter Your Email Id\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), this.validator.message('email', this.state.email, 'required|email')))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"md-form mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"subject\",\n      value: this.state.subject,\n      onChange: e => {\n        this.setState({\n          subject: e.target.value\n        });\n      },\n      onBlur: () => this.validator.showMessageFor('subject'),\n      placeholder: \"Please Enter Your Subject\",\n      name: \"subject\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    })), this.validator.message('subject', this.state.subject, 'required'))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"md-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      type: \"text\",\n      value: this.state.message,\n      onChange: e => {\n        this.setState({\n          message: e.target.value\n        });\n      },\n      onBlur: () => this.validator.showMessageFor('message'),\n      id: \"message\",\n      name: \"message\",\n      placeholder: \"Please Enter Your message\",\n      rows: 2,\n      className: \"form-control md-textarea\",\n      defaultValue: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }))), this.validator.message('message', this.state.message, 'required')), React.createElement(\"div\", {\n      className: \"text-center text-md-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, \"Send Message\"))), React.createElement(\"div\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-3 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"list-unstyled mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-map-marker-alt fa-2x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Rajajinagar, West of Chord road, Bangalore 560086, India\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-phone mt-4 fa-2x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"+ 01 234 567 89\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-envelope mt-4 fa-2x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"info@redintegro.com\"))))))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \"Search\")), React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    })), React.createElement(\"table\", {\n      class: \"table table-hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, \"Subject\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, \"Meaasge\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, \"Action\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, this.state.apiMDBvalue != null ? this.state.apiMDBvalue.map(value => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, value.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, value.email), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, value.subject), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, value.message), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-danger px-3\",\n      onClick: this.removeContact.bind(this, value._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-user-times\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-warning px-3\",\n      onClick: this.editContact.bind(this, value._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-user-edit\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }))))) : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, \"Not Found\")))));\n  }\n\n}\n\nexport default TestContact;","map":{"version":3,"sources":["E:/React Js/my-app/src/views/testContact.js"],"names":["React","Component","SimpleReactValidator","MDBDataTable","DataTable","Redirect","axios","require","instance","create","baseURL","columnsMDB","label","field","sort","width","TestContact","constructor","props","state","email","name","subject","message","users","err","keyword","apiValue","apiMDBvalue","validator","autoForceUpdate","messages","default","element","color","contactForm","bind","main","getContact","allValid","alert","console","log","user","post","then","res","data","showMessages","forceUpdate","event","preventDefault","target","reset","componentDidMount","removeContact","id","defaults","port","isRemove","window","confirm","get","catch","error","searchContact","editContact","history","push","url","method","query","result","contact","contacts","setState","render","e","value","showMessageFor","map","_id"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Component } from 'ag-grid-community';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport DataTable from 'react-data-table-component';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst axios = require('axios');\r\nconst instance = axios.create({baseURL: 'http://127.0.0.1:8000'})\r\nconst columnsMDB = [\r\n    {\r\n        label: 'Id',\r\n        field: '_id',\r\n        sort: 'asc',\r\n        width:200\r\n    },\r\n    {\r\n        label: 'Name',\r\n        field: 'name',\r\n        sort: 'asc',\r\n        width:300\r\n    },\r\n    {\r\n        label: 'E-mail',\r\n        field: 'email',\r\n        sort: 'asc',\r\n        width:300\r\n    },\r\n    {\r\n      label: 'Subject',\r\n      field: 'subjecr',\r\n      sort: 'asc',\r\n      width:300\r\n    },\r\n    {\r\n      label: 'Message',\r\n      field: 'message',\r\n      sort: 'asc',\r\n      width:100\r\n    },\r\n  ] ;\r\nclass TestContact extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            email: null,\r\n            name:'',\r\n            subject:'',\r\n            message:'',\r\n        //     val: \"Prakash\" ,\r\n        //    flag:1,\r\n           users:[],\r\n           name:'',\r\n           err:'',\r\n           keyword:'',\r\n           apiValue:null,\r\n           apiMDBvalue:null,\r\n        }\r\n        this.validator = new SimpleReactValidator({autoForceUpdate: this,messages: {\r\n            email: 'That is not an E mail!!.',\r\n            // OR\r\n            default: 'Validation has failed!'  // will override all messages\r\n          },element: message => <div style={{color: \"red\"}}>{message}</div>});\r\n        this.contactForm = this.contactForm.bind(this)\r\n        this.main = this.main.bind(this)\r\n        this.getContact = this.getContact.bind(this)\r\n    }\r\n    main() {\r\n        if (this.validator.allValid()) {\r\n            alert('You submitted the form and stuff!');\r\n            console.log(\"test here\")\r\n                var user={\r\n                    'name':this.state.name,\r\n                    'email':this.state.email,\r\n                    'subject':this.state.subject,\r\n                    'message':this.state.message\r\n                };\r\n                instance.post(`/contact/insert`,{  'name':this.state.name,\r\n                'email':this.state.email,\r\n                'subject':this.state.subject,\r\n                'message':this.state.message})\r\n                .then(res => {\r\n                    console.log(res);\r\n                    console.log(res.data);\r\n                    this.getContact();\r\n                })\r\n                console.log('All works fine, congratz!');\r\n          }else {\r\n            this.validator.showMessages();\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n    contactForm(event){\r\n        event.preventDefault();\r\n        console.log(\"form submited\",this.state.email,\"name :\",this.state.name,\"subject :\",this.state.subject,'message :',this.state.message)\r\n        // let testAccount = await nodemailer.createTestAccount();\r\n        this.main()\r\n        event.target.reset();\r\n        \r\n    }\r\n    componentDidMount(){\r\n        // /contact/remove/\r\n        this.getContact()\r\n    }\r\n    removeContact(id){\r\n        axios.defaults.port = 8000;\r\n        let isRemove=window.confirm('Are You Sure To Delete This Record ?')\r\n        if(isRemove){\r\n            instance.get('/contact/remove/'+id)\r\n            .then(res => {\r\n                this.getContact()\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n            console.log('user Id:',id);\r\n        }\r\n    }\r\n    searchContact(event){\r\n\r\n    }\r\n    editContact(id){\r\n        this.props.history.push('/edit/'+id);\r\n        // this.props.history.push('/edit/'+id);\r\n        // return <Redirect to='/edit/23' />\r\n        console.log(\"htisi\",id)\r\n    }\r\n    getContact(){\r\n        axios({\r\n            url: 'http://localhost:8000/graphql',\r\n            method: 'post',\r\n            data: {\r\n              query:  `\r\n                query {\r\n                    contacts {\r\n                    name\r\n                    email\r\n                    subject\r\n                    message\r\n                    }\r\n                }`\r\n            }\r\n          }).then((result) => {\r\n            console.log(result.data)\r\n            const contact = result.data.contacts;\r\n        //       console.log(contact);\r\n              this.setState({ apiMDBvalue: contact });\r\n          });\r\n\r\n\r\n        // console.log(\"Inside get function\");\r\n        // const requestBody = {\r\n        //     query: `\r\n        //         query {\r\n        //           contacts {\r\n        //             name\r\n        //             email\r\n        //             subject\r\n        //             message\r\n        //           }\r\n        //         }\r\n        //       `\r\n        //   };\r\n        //   instance.post(\"/graphql\",\r\n        //    {requestBody})\r\n        //     .then(res => {\r\n        //         console.log(\"result\",res);\r\n        //       if (res.status !== 200 && res.status !== 201) {\r\n        //         throw new Error(\"Failed!\");\r\n        //       }\r\n        //       return res.json();\r\n        //     })\r\n        //     .then(resData => {\r\n        //       const contact = resData.data.contacts;\r\n        //       console.log(contact);\r\n        //       this.setState({ apiMDBvalue: contact });\r\n        //     })\r\n        //     .catch(err => {\r\n        //       console.log(err);\r\n        //     });\r\n        // axios\r\n        \r\n        // console.log('called here  in getcCOntact')\r\n        // .defaults.port = 8000;\r\n        // instance.get('/contact/list')\r\n        // .then(res => {\r\n        //     console.log('data result:',res);\r\n        //     console.log('second value:',res.data);\r\n        //     this.setState({\r\n        //         // apiMDBvalue:{'coloums':columnsMDB,'rows': res.data}\r\n        //         apiMDBvalue:res.data,\r\n        //     });\r\n        // })\r\n        // .catch(error =>{\r\n        //     console.log(error)\r\n        // })\r\n        // axios({\r\n        //     method: 'get',\r\n        //     url: 'http://localhost:8000/contact/list',\r\n        //     responseType: 'stream'\r\n        //   })\r\n        //     .then(  (response)=>{\r\n        //         console.log('    :',response)\r\n        //         this.setState({\r\n        //             apiValue: response.data,\r\n        //             apiMDBvalue:{'coloums':columnsMDB,'rows': response.data}\r\n        //         },()=>{\r\n        //             console.log('api data vcaoue:',this.state.apiValue)\r\n        //         })\r\n        //     // getData(response.data);\r\n        //     //   response.data.pipe(fs.createWriteStream('ada_lovelace.jpg'))\r\n        \r\n        //     });\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n               <div className=\"contact-form\">\r\n                    <div className=\"container\">\r\n                    <section className=\"mb-4\">\r\n                        {/*Section heading*/}\r\n                        <h2 className=\"h1-responsive font-weight-bold text-center my-4\">Contact us</h2>\r\n                        {/*Section description*/}\r\n                        <p className=\"text-center w-responsive mx-auto mb-5\">Do you have any questions? Please do not hesitate to contact us directly. Our team will come back to you within\r\n                        a matter of hours to help you.</p>\r\n                        <div className=\"row\">\r\n                        {/*Grid column*/}\r\n                        <div className=\"col-md-9 mb-md-0 mb-5\">\r\n                            <form id=\"contact-form\" onSubmit={this.contactForm}>\r\n                            {/*Grid row*/}\r\n                            <div className=\"row\">\r\n                                {/*Grid column*/}\r\n                                <div className=\"col-md-6\">\r\n                                <div className=\"md-form mb-0\">\r\n                                    <input type=\"text\" id=\"name\" name=\"name\"  value={this.state.name} onChange={(e)=>{\r\n                                        this.setState({\r\n                                            name:e.target.value\r\n                                        })\r\n                                    }}   onBlur={() => this.validator.showMessageFor('name')}placeholder=\"Please Enter Your Name\" className=\"form-control\" />\r\n                                     {this.validator.message('name', this.state.name, 'required')}\r\n                                </div>\r\n                                </div>\r\n                                {/*Grid column*/}\r\n                                {/*Grid column*/}\r\n                                <div className=\"col-md-6\">\r\n                                <div className=\"md-form mb-0\">\r\n                                    <input type=\"text\" id=\"email\"  value={this.state.email} name=\"email\" onChange={(e)=>{\r\n                                        this.setState({\r\n                                            email: e.target.value\r\n                                        })\r\n                                    }} onBlur={() => this.validator.showMessageFor('email')}  placeholder=\"Please Enter Your Email Id\" className=\"form-control\"/>\r\n                                    \r\n                                    {this.validator.message('email', this.state.email, 'required|email')}\r\n\r\n                                </div>\r\n                                </div>\r\n                                {/*Grid column*/}\r\n                            </div>\r\n                            {/*Grid row*/}\r\n                            {/*Grid row*/}\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                <div className=\"md-form mb-0\">\r\n                                    <input type=\"text\" id=\"subject\"  value={this.state.subject} onChange={(e)=>{\r\n                                        this.setState({\r\n                                            subject:e.target.value\r\n                                        })\r\n                                    }}  onBlur={() => this.validator.showMessageFor('subject')} placeholder=\"Please Enter Your Subject\" name=\"subject\" className=\"form-control\" />\r\n                                </div>\r\n                                {this.validator.message('subject', this.state.subject, 'required')}\r\n                                </div>\r\n                            </div>\r\n                            {/*Grid row*/}\r\n                            {/*Grid row*/}\r\n                            <div className=\"row\">\r\n                                {/*Grid column*/}\r\n                                <div className=\"col-md-12\">\r\n                                <div className=\"md-form\">\r\n                                    <textarea type=\"text\" value={this.state.message} onChange={(e)=>{\r\n                                        this.setState({\r\n                                            message:e.target.value\r\n                                        })\r\n                                    }}   onBlur={() => this.validator.showMessageFor('message')} id=\"message\" name=\"message\" placeholder=\"Please Enter Your message\" rows={2} className=\"form-control md-textarea\" defaultValue={\"\"} />\r\n                                </div>\r\n                                </div>\r\n                                {this.validator.message('message', this.state.message, 'required')}\r\n                            </div>\r\n                            {/*Grid row*/}\r\n                           \r\n                            <div className=\"text-center text-md-left\">\r\n                            <button className=\"btn btn-primary\" type=\"submit\">Send Message</button>\r\n                            </div>\r\n                            </form>\r\n                            <div className=\"status\" />\r\n                        </div>\r\n                        {/*Grid column*/}\r\n                        {/*Grid column*/}\r\n                        <div className=\"col-md-3 text-center\">\r\n                            <ul className=\"list-unstyled mb-0\">\r\n                            <li><i className=\"fas fa-map-marker-alt fa-2x\" />\r\n                                <p>Rajajinagar, West of Chord road, Bangalore 560086, India</p>\r\n                            </li>\r\n                            <li><i className=\"fas fa-phone mt-4 fa-2x\" />\r\n                                <p>+ 01 234 567 89</p>\r\n                            </li>\r\n                            <li><i className=\"fas fa-envelope mt-4 fa-2x\" />\r\n                                <p>info@redintegro.com</p>\r\n                            </li>\r\n                            </ul>\r\n                        </div>\r\n                        {/*Grid column*/}\r\n                        </div>\r\n                    </section>\r\n                    \r\n                    </div>\r\n                    {/* <MDBDataTable\r\n                        striped\r\n                        bordered    \r\n                        hover\r\n                        paging={true}\r\n                        columns={columnsMDB}\r\n                        data={this.state.apiMDBvalue ? this.state.apiMDBvalue:[]}\r\n                    /> */}\r\n                     <div className=\"row\">\r\n                     <div className=\"col-md-3\">\r\n                            {/* <h4>Search</h4> */}\r\n                            {/* <input type=\"text\" name=\"search\"/> */}\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <h4>Search</h4>\r\n                            {/* <input type=\"text\" name=\"search\"/> */}\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            {/* <input type=\"text\" name=\"search\" onChange={this.searchContact(event)}/> */}\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            {/* <input type=\"text\" name=\"search\"/> */}\r\n                        </div>\r\n                       \r\n                        \r\n                    </div>\r\n                    {/* </div> */}\r\n                    <table class=\"table table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                        {/* <th scope=\"col\">#</th> */}\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Email</th>\r\n                        <th scope=\"col\">Subject</th>\r\n                        <th scope=\"col\">Meaasge</th>\r\n                        <th scope=\"col\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.apiMDBvalue!=null ? this.state.apiMDBvalue.map(value =>\r\n                        <tr>\r\n                            {/* {i=0} */}\r\n                            <th scope=\"row\">{value.name}</th>\r\n                            {/* <td>{i++}</td> */}\r\n                            <td>{value.email}</td>\r\n                            <td>{value.subject}</td>\r\n                            <td>{value.message}</td>\r\n                            <td>\r\n                                <button type=\"button\" class=\"btn btn-danger px-3\" onClick={this.removeContact.bind(this,value._id)}><i class=\"fas fa-user-times\" aria-hidden=\"true\"></i></button>\r\n                                <button type=\"button\" class=\"btn btn-warning px-3\" onClick={this.editContact.bind(this,value._id)}><i class=\"fas fa-user-edit\" aria-hidden=\"true\"></i></button>\r\n                                \r\n                            </td>\r\n                        </tr>\r\n                        ):<h1>Not Found</h1>}\r\n                    </tbody>\r\n                    </table>\r\n                </div> \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default TestContact;"]},"metadata":{},"sourceType":"module"}