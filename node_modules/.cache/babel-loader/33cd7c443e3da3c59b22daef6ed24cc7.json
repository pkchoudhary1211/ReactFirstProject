{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Js\\\\my-app\\\\src\\\\views\\\\testMDB.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { MDBDataTable } from 'mdbreact';\nimport DataTable from 'react-data-table-component';\nimport { Doughnut, Bar } from 'react-chartjs-2'; // import { Doughnut } from 'react-chartjs-2';\n\nimport PieChart from 'react-minimal-pie-chart';\nimport ReactSvgPieChart from \"react-svg-piechart\";\n\nconst axios = require('axios');\n\nconst data = {\n  \"labels\": [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\"],\n  \"datasets\": [{\n    \"label\": \"Insolation\",\n    \"data\": [\"null\", \"null\", \"null\", \"null\", \"null\", \"null\", \"null\", \"null\", \"null\", \"null\", 5519, 5074, 4853, 4933, 4055, 5455, 4917, 4973, 4739, 4432, 4216, 3427, 3270, 3921, 1797, 3014, 3240, 3582, 4064, 4325],\n    \"backgroundColor\": \"transparent\",\n    \"borderColor\": \"#000000\",\n    \"borderWidth\": 2,\n    \"yAxisID\": \"insolation\",\n    \"type\": \"line\"\n  }, {\n    \"label\": \"Yield\",\n    \"data\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3581, 3328, 3175, 3324, 2649, 3564, 3256, 3258, 3078, 2885, 2784, 2387, 2244, 2736, 1277, 2110, 2192, 2447, 2748, 2910],\n    \"backgroundColor\": \"#f6821f\",\n    \"borderColor\": \"#f6821f\",\n    \"borderWidth\": 1\n  }, {\n    \"label\": \"Estimated Yield\",\n    \"data\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3644, 3350, 3204, 3257, 2677, 3602, 3247, 3284, 3129, 2926, 2784, 2263, 2159, 2589, 1186, 1990, 2139, 2365, 2683, 2856],\n    \"backgroundColor\": \"#35508e\",\n    \"borderColor\": \"#35508e\",\n    \"borderWidth\": 1\n  }]\n};\nconst columnsMDB = [{\n  label: 'userId',\n  field: 'userId',\n  sort: 'asc',\n  width: 150\n}, {\n  label: '#',\n  field: 'id',\n  sort: 'asc',\n  width: 100\n}, {\n  label: 'Title',\n  field: 'title',\n  sort: 'asc',\n  width: 300\n}, {\n  label: 'Body',\n  field: 'body',\n  sort: 'asc',\n  width: 600\n}];\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.apiData = () => {\n      console.log(\"inside api data\");\n      axios({\n        method: 'get',\n        url: 'https://jsonplaceholder.typicode.com/posts',\n        responseType: 'stream'\n      }).then(response => {\n        this.setState({\n          apiValue: response.data,\n          apiMDBvalue: {\n            'rows': response.data\n          }\n        }, () => {\n          console.log(this.state.apiValue);\n        });\n      });\n    };\n\n    this.state = {\n      apiMDBvalue: null\n    };\n  }\n\n  componentDidMount() {\n    this.apiData();\n  }\n\n  render() {\n    console.log(\"Inside test\");\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(MDBDataTable, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      paging: true,\n      columns: columnsMDB,\n      data: this.state.apiMDBvalue ? this.state.apiMDBvalue : [],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      data: data,\n      width: 100,\n      height: 50,\n      options: {\n        maintainAspectRatio: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Doughnut, {\n      data: data // options={ {maintainAspectRatio: false} }\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Test;","map":{"version":3,"sources":["E:/React Js/my-app/src/views/testMDB.js"],"names":["React","MDBDataTable","DataTable","Doughnut","Bar","PieChart","ReactSvgPieChart","axios","require","data","columnsMDB","label","field","sort","width","Test","Component","constructor","props","apiData","console","log","method","url","responseType","then","response","setState","apiValue","apiMDBvalue","state","componentDidMount","render","maintainAspectRatio"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport DataTable from 'react-data-table-component';\r\nimport { Doughnut, Bar   } from 'react-chartjs-2';\r\n// import { Doughnut } from 'react-chartjs-2';\r\nimport PieChart from 'react-minimal-pie-chart';\r\nimport ReactSvgPieChart from \"react-svg-piechart\"\r\nconst axios = require('axios');\r\nconst data = {\"labels\":[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\"],\"datasets\":[{\"label\":\"Insolation\",\"data\":[\"null\",\"null\",\"null\",\"null\",\"null\",\"null\",\"null\",\"null\",\"null\",\"null\",5519,5074,4853,4933,4055,5455,4917,4973,4739,4432,4216,3427,3270,3921,1797,3014,3240,3582,4064,4325],\"backgroundColor\":\"transparent\",\"borderColor\":\"#000000\",\"borderWidth\":2,\"yAxisID\":\"insolation\",\"type\":\"line\"},{\"label\":\"Yield\",\"data\":[0,0,0,0,0,0,0,0,0,0,3581,3328,3175,3324,2649,3564,3256,3258,3078,2885,2784,2387,2244,2736,1277,2110,2192,2447,2748,2910],\"backgroundColor\":\"#f6821f\",\"borderColor\":\"#f6821f\",\"borderWidth\":1},{\"label\":\"Estimated Yield\",\"data\":[0,0,0,0,0,0,0,0,0,0,3644,3350,3204,3257,2677,3602,3247,3284,3129,2926,2784,2263,2159,2589,1186,1990,2139,2365,2683,2856],\"backgroundColor\":\"#35508e\",\"borderColor\":\"#35508e\",\"borderWidth\":1}]}\r\n  const columnsMDB = [\r\n    \r\n    {\r\n        label: 'userId',\r\n        field: 'userId',\r\n        sort: 'asc',\r\n        width:150\r\n    },\r\n    {\r\n        label: '#',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width:100\r\n    },\r\n    {\r\n      label: 'Title',\r\n      field: 'title',\r\n      sort: 'asc',\r\n      width:300\r\n    },\r\n    {\r\n      label: 'Body',\r\n      field: 'body',\r\n      sort: 'asc',\r\n      width:600\r\n    },\r\n  ] ;\r\n\r\nclass Test extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            apiMDBvalue:null,\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.apiData();\r\n    }\r\n    apiData = () =>{\r\n        console.log(\"inside api data\")\r\n        axios({\r\n            method: 'get',\r\n            url: 'https://jsonplaceholder.typicode.com/posts',\r\n            responseType: 'stream'\r\n          })\r\n        .then(  (response)=>{\r\n            this.setState({\r\n                apiValue: response.data,\r\n                apiMDBvalue:{'rows': response.data}\r\n            },()=>{\r\n                console.log(this.state.apiValue)\r\n            })\r\n        });\r\n    }\r\n    render(){\r\n        console.log(\"Inside test\")\r\n        return(\r\n            <React.Fragment>\r\n            <MDBDataTable\r\n            striped\r\n            bordered    \r\n            hover\r\n            paging={true}\r\n            columns={columnsMDB}\r\n            data={this.state.apiMDBvalue ? this.state.apiMDBvalue:[]}\r\n        />\r\n        <Bar\r\n  data={data}\r\n  width={100}\r\n  height={50}\r\n  options={{ maintainAspectRatio: false }}\r\n/>\r\n        <Doughnut\r\n           data={data}\r\n            // options={ {maintainAspectRatio: false} }\r\n        />\r\n            {/* <PieChart\r\n                animate={true}\r\n                // rounded={true}\r\n                width={60}\r\n                x={10}\r\n                startAngle={10}\r\n                data={data}\r\n            />; */}\r\n            {/* <ReactSvgPieChart\r\n                data={data}\r\n                strokeWidth={.04}\r\n                viewBoxSize={1}\r\n                expandSize={1}\r\n                // If you need expand on hover (or touch) effect\r\n                expandOnHover\r\n                // If you need custom behavior when sector is hovered (or touched)\r\n                // onSectorHover={(d, i, e) => {\r\n                // //   if (d) {\r\n                // //     console.log(\"Mouse enter - Index:\", i, \"Data:\", d, \"Event:\", e)\r\n                // //   } else {\r\n                // //     console.log(\"Mouse leave - Index:\", i, \"Event:\", e)\r\n                // //   }\r\n                // }}\r\n            /> */}\r\n\r\n        </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test;"]},"metadata":{},"sourceType":"module"}