{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Js\\\\my-app\\\\src\\\\views\\\\chat.js\";\nimport React from 'react';\nimport \"../static/chatStyle.css\";\nimport io from 'socket.io-client';\n\nconst axios = require('axios');\n\nconst instance = axios.create({\n  baseURL: 'http://127.0.0.1:8000'\n});\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sendChat = () => {\n      console.log('user data');\n\n      if (this.state.sendValue) {\n        console.log('user data value');\n        let body = {\n          query: \"\\n                    mutation{chat(userChat:{\\n                        sender:\\\"user\\\",\\n                        message: \\\"\".concat(this.state.sendValue, \"\\\"\\n                    }),{\\n                        name\\n                    }\\n                }\")\n        };\n        instance({\n          url: 'graphql',\n          method: 'post',\n          data: body\n        }).then(res => {\n          this.getChat();\n          console.log('response', res);\n        }).catch(err => {\n          console.log(';rrror', err);\n        });\n      }\n\n      this.setState({\n        sendValue: ''\n      });\n    };\n\n    this.getChat = this.getChat.bind(this);\n    this.getChat = this.getChat.bind(this);\n    this.state = {\n      chateData: null,\n      sendValue: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getChat();\n\n    var socket = require('socket.io-client')('http://localhost:8001');\n\n    socket.on('connect', function () {\n      console.log('connect');\n    });\n    socket.on('event', function (data) {\n      console.log('event');\n    });\n    socket.on('disconnect', function () {\n      console.log('discounnected');\n    });\n  }\n\n  getChat() {\n    let body = {\n      query: \"query{\\n                getChat{\\n                    chat{\\n                      message,\\n                      sender,\\n                      date\\n                    }\\n                }\\n            }\"\n    };\n    instance({\n      url: 'graphql',\n      method: 'post',\n      data: body\n    }).then(res => {\n      console.log('user result', res.data.data.getChat.chat);\n      this.setState({\n        chateData: res.data.data.getChat.chat\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \" text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Chat With Me\"), React.createElement(\"div\", {\n      className: \"messaging\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inbox_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inbox_people\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"headind_srch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"recent_heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Recent\")), React.createElement(\"div\", {\n      className: \"srch_bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"stylish-input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"search-bar\",\n      placeholder: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"input-group-addon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \" \", React.createElement(\"i\", {\n      className: \"fa fa-search\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), \" \")), \" \"))), React.createElement(\"div\", {\n      className: \"inbox_chat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chat_list active_chat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chat_people\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chat_img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \" \", React.createElement(\"img\", {\n      src: \"https://ptetutorials.com/images/user-profile.png\",\n      alt: \"sunil\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), \" \"), React.createElement(\"div\", {\n      className: \"chat_ib\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Sunil Rajput \", React.createElement(\"span\", {\n      className: \"chat_date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Dec 25\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Test, which is a new approach to have all solutions astrology under one roof.\")))), React.createElement(\"div\", {\n      className: \"chat_list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chat_people\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chat_img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \" \", React.createElement(\"img\", {\n      src: \"https://ptetutorials.com/images/user-profile.png\",\n      alt: \"sunil\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), \" \"), React.createElement(\"div\", {\n      className: \"chat_ib\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Sunil Rajput \", React.createElement(\"span\", {\n      className: \"chat_date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Dec 25\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Test, which is a new approach to have all solutions astrology under one roof.\")))))), React.createElement(\"div\", {\n      className: \"mesgs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"msg_history\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, this.state.chateData ? this.state.chateData.map(value => React.createElement(React.Fragment, null, value.sender == 'admin' ? React.createElement(\"div\", {\n      className: \"incoming_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"incoming_msg_img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \" \", React.createElement(\"img\", {\n      src: \"https://ptetutorials.com/images/user-profile.png\",\n      alt: \"sunil\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), \" \"), React.createElement(\"div\", {\n      className: \"received_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"received_withd_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, value.message), React.createElement(\"span\", {\n      className: \"time_date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, value.date)))) : React.createElement(\"div\", {\n      className: \"outgoing_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sent_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, value.message), React.createElement(\"span\", {\n      className: \"time_date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, value.date), \" \")))) : 'No data'), React.createElement(\"div\", {\n      className: \"type_msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input_msg_write\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"write_msg\",\n      value: this.state.sendValue,\n      placeholder: \"Type a message\",\n      onChange: e => {\n        this.setState({\n          sendValue: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), this.state.sendValue ? React.createElement(\"button\", {\n      className: \"msg_send_btn\",\n      type: \"button\",\n      onClick: this.sendChat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-paper-plane-o\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })) : '')))))));\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["E:/React Js/my-app/src/views/chat.js"],"names":["React","io","axios","require","instance","create","baseURL","Chat","Component","constructor","props","sendChat","console","log","state","sendValue","body","query","url","method","data","then","res","getChat","catch","err","setState","bind","chateData","componentDidMount","socket","on","chat","render","map","value","sender","message","date","e","target"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport \"../static/chatStyle.css\"\r\nimport io from 'socket.io-client';\r\nconst axios = require('axios');\r\nconst instance = axios.create({baseURL: 'http://127.0.0.1:8000'})\r\nclass Chat extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.getChat = this.getChat.bind(this)\r\n        this.getChat= this.getChat.bind(this)\r\n        this.state={\r\n            chateData:null,\r\n            sendValue:'',\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.getChat()\r\n        var socket = require('socket.io-client')('http://localhost:8001');\r\n        socket.on('connect', function(){\r\n            console.log('connect')\r\n        });\r\n        socket.on('event', function(data){\r\n            console.log('event')\r\n        });\r\n        socket.on('disconnect', function(){\r\n            console.log('discounnected')\r\n        });\r\n    }\r\n    sendChat=()=>{\r\n        console.log('user data')\r\n        if(this.state.sendValue){\r\n            console.log('user data value')\r\n            let body={\r\n                query:`\r\n                    mutation{chat(userChat:{\r\n                        sender:\"user\",\r\n                        message: \"${this.state.sendValue}\"\r\n                    }),{\r\n                        name\r\n                    }\r\n                }`\r\n            }\r\n            instance({\r\n                url:'graphql',\r\n                method:'post',\r\n                data:body\r\n            }).then(res=>{\r\n                this.getChat()\r\n                console.log('response',res)\r\n            }).catch(err=>{\r\n                console.log(';rrror',err)\r\n            })\r\n        }\r\n        this.setState({\r\n            sendValue:''\r\n        })\r\n    }\r\n    getChat(){\r\n        let body ={\r\n            query:`query{\r\n                getChat{\r\n                    chat{\r\n                      message,\r\n                      sender,\r\n                      date\r\n                    }\r\n                }\r\n            }`\r\n        }\r\n        instance({\r\n            url:'graphql',\r\n            method:'post',\r\n            data:body\r\n        }).then(res=>{\r\n            console.log('user result',res.data.data.getChat.chat);\r\n            this.setState({\r\n                chateData:res.data.data.getChat.chat\r\n               \r\n            })\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                <h3 className=\" text-center\">Chat With Me</h3>\r\n                <div className=\"messaging\">\r\n                <div className=\"inbox_msg\">\r\n                    <div className=\"inbox_people\">\r\n                    <div className=\"headind_srch\">\r\n                        <div className=\"recent_heading\">\r\n                        <h4>Recent</h4>\r\n                        </div>\r\n                        <div className=\"srch_bar\">\r\n                        <div className=\"stylish-input-group\">\r\n                            <input type=\"text\" className=\"search-bar\" placeholder=\"Search\" />\r\n                            <span className=\"input-group-addon\">\r\n                            <button type=\"button\"> <i className=\"fa fa-search\" aria-hidden=\"true\" /> </button>\r\n                            </span> </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"inbox_chat\">\r\n                        <div className=\"chat_list active_chat\">\r\n                        <div className=\"chat_people\">\r\n                            <div className=\"chat_img\"> <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" /> </div>\r\n                            <div className=\"chat_ib\">\r\n                            <h5>Sunil Rajput <span className=\"chat_date\">Dec 25</span></h5>\r\n                            <p>Test, which is a new approach to have all solutions \r\n                                astrology under one roof.</p>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"chat_list\">\r\n                        <div className=\"chat_people\">\r\n                            <div className=\"chat_img\"> <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" /> </div>\r\n                            <div className=\"chat_ib\">\r\n                            <h5>Sunil Rajput <span className=\"chat_date\">Dec 25</span></h5>\r\n                            <p>Test, which is a new approach to have all solutions \r\n                                astrology under one roof.</p>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"mesgs\">\r\n                    <div className=\"msg_history\">\r\n                        {this.state.chateData ? this.state.chateData.map(value=>\r\n                            <> \r\n                        {value.sender=='admin' ?\r\n                         <div className=\"incoming_msg\">\r\n                          <div className=\"incoming_msg_img\"> <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" /> </div>\r\n                        <div className=\"received_msg\">\r\n                            <div className=\"received_withd_msg\">\r\n                            <p>{value.message}</p>\r\n                            <span className=\"time_date\">{value.date}</span></div>\r\n                        </div>\r\n                        </div>  \r\n                        :\r\n                        <div className=\"outgoing_msg\">\r\n                        <div className=\"sent_msg\">\r\n                            <p>{value.message}</p>\r\n                            <span className=\"time_date\">{value.date}</span> </div>\r\n                        </div>\r\n                        }    \r\n                       \r\n                        \r\n                        </>\r\n                        ):'No data' }\r\n                    </div>\r\n                    <div className=\"type_msg\">\r\n                        <div className=\"input_msg_write\">\r\n                        <input type=\"text\" className=\"write_msg\" value={this.state.sendValue}  placeholder=\"Type a message\" onChange={(e)=>{\r\n                            this.setState({\r\n                                sendValue:e.target.value\r\n                            })\r\n                        }} />\r\n                        {\r\n                            this.state.sendValue ? <button className=\"msg_send_btn\" type=\"button\" onClick={this.sendChat}><i className=\"fa fa-paper-plane-o\" aria-hidden=\"true\" /></button>\r\n                            : ''\r\n                        }\r\n                        \r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div></div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default Chat"]},"metadata":{},"sourceType":"module"}